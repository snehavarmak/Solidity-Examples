// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract InsecureArithmetic {
    mapping(address => uint256) public balances;

    function deposit(uint256 amount) public {
        balances[msg.sender] += amount; // Possible overflow
    }

    function withdraw(uint256 amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        balances[msg.sender] -= amount; // Possible underflow
    }

    function divide(uint256 a, uint256 b) public pure returns (uint256) {
        return a / b; // Division by zero
    }
}
