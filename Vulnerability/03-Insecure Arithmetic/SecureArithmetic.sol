// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/utils/math/SafeMath.sol";

contract SecureArithmetic {
    using SafeMath for uint256;
    mapping(address => uint256) public balances;

    function deposit(uint256 amount) public {
        balances[msg.sender] = balances[msg.sender].add(amount);
    }

    function withdraw(uint256 amount) public {
        require(balances[msg.sender] >= amount, "Insufficient balance");
        balances[msg.sender] = balances[msg.sender].sub(amount);
    }

    function divide(uint256 a, uint256 b) public pure returns (uint256) {
        require(b != 0, "Division by zero");
        return a.div(b);
    }
}
